{
  "address": "0x9599c08B6D8D15230Ff5762d7EF07C4698b2D8f1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "incentivesController",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rewardsAdmin",
          "type": "address"
        },
        {
          "internalType": "contract IStakedToken",
          "name": "stakeToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "dropApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIncentivesController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakeContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reward",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "performTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renewApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x75ffbfecb001852d40a4a08145172b1ff4226e67b02ce2270cc30b39b9edd222",
  "receipt": {
    "to": null,
    "from": "0x169e2FfC1c6b229b04E65A431434bF0e8eD9563d",
    "contractAddress": "0x9599c08B6D8D15230Ff5762d7EF07C4698b2D8f1",
    "transactionIndex": 2,
    "gasUsed": "703530",
    "logsBloom": "0x
    "blockHash": "0x8173dfbd1c20ff00a0d94b1ba872b46e7fc575cefb4346a04b465baeb73b9a22",
    "transactionHash": "0x75ffbfecb001852d40a4a08145172b1ff4226e67b02ce2270cc30b39b9edd222",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 188475,
        "transactionHash": "0x75ffbfecb001852d40a4a08145172b1ff4226e67b02ce2270cc30b39b9edd222",
        "address": "0x33Aa8F94428C0F891dFd77DD141878aBCaEFEbe8",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000009599c08b6d8d15230ff5762d7ef07c4698b2d8f1",
          "0x00000000000000000000000073cfe9fdee48bd68a75c9ec838f2781d13acca62"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 1,
        "blockHash": "0x8173dfbd1c20ff00a0d94b1ba872b46e7fc575cefb4346a04b465baeb73b9a22"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 188475,
        "transactionHash": "0x75ffbfecb001852d40a4a08145172b1ff4226e67b02ce2270cc30b39b9edd222",
        "address": "0x33Aa8F94428C0F891dFd77DD141878aBCaEFEbe8",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000009599c08b6d8d15230ff5762d7ef07c4698b2d8f1",
          "0x00000000000000000000000073cfe9fdee48bd68a75c9ec838f2781d13acca62"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 2,
        "blockHash": "0x8173dfbd1c20ff00a0d94b1ba872b46e7fc575cefb4346a04b465baeb73b9a22"
      }
    ],
    "blockNumber": 188475,
    "cumulativeGasUsed": "837295",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3c6E875C772c837E3d84b49E79A167226a68dFa5",
    "0x169e2FfC1c6b229b04E65A431434bF0e8eD9563d",
    "0x73cFe9fdee48bd68A75C9Ec838F2781D13AccA62"
  ],
  "numDeployments": 1,
  "solcInputHash": "afa3e5e8b3854b65627db3eff7ad76b1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"incentivesController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardsAdmin\",\"type\":\"address\"},{\"internalType\":\"contract IStakedToken\",\"name\":\"stakeToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dropApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIncentivesController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"performTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renewApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"kind\":\"dev\",\"methods\":{\"dropApproval()\":{\"details\":\"Drop approval of AAVE to the Staked Aave contract in case of emergency.\"},\"emergencyWithdrawal(address,address,uint256)\":{\"details\":\"Perform an emergency token withdrawal only callable by the Rewards admin\",\"params\":{\"amount\":\"Amount of the withdrawal\",\"to\":\"Address of the recipient of the withdrawal\",\"token\":\"Address of the token to withdraw funds from this contract\"}},\"getIncentivesController()\":{\"returns\":{\"_0\":\"Returns the address of the Incentives Controller\"}},\"getRewardsAdmin()\":{\"returns\":{\"_0\":\"Returns the address of the Rewards admin\"}},\"getStakeContract()\":{\"returns\":{\"_0\":\"Staked Token contract address\"}},\"getUnderlyingToken()\":{\"returns\":{\"_0\":\"Underlying token address from the stake contract\"}},\"performTransfer(address,address,uint256)\":{\"details\":\"Perform custom transfer logic via delegate call from source contract to a TransferStrategy implementation\",\"params\":{\"amount\":\"Amount to transfer to the \\\"to\\\" address parameter\",\"reward\":\"Address of the reward token\",\"to\":\"Account to transfer rewards\"},\"returns\":{\"_0\":\"Returns true bool if transfer logic succeeds\"}},\"renewApproval()\":{\"details\":\"Perform a MAX_UINT approval of AAVE to the Staked Aave contract.\"}},\"title\":\"StakedTokenTransferStrategy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Transfer strategy that stakes the rewards into a staking contract and transfers the staking contract token. The underlying token must be transferred to this contract to be able to stake it on demand.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/periphery-v3/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol\":\"StakedTokenTransferStrategy\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-or-later\\npragma solidity 0.8.10;\\n\\nimport {IERC20} from '../../openzeppelin/contracts/IERC20.sol';\\n\\n/// @title Gnosis Protocol v2 Safe ERC20 Transfer Library\\n/// @author Gnosis Developers\\n/// @dev Gas-efficient version of Openzeppelin's SafeERC20 contract.\\nlibrary GPv2SafeERC20 {\\n  /// @dev Wrapper around a call to the ERC20 function `transfer` that reverts\\n  /// also when the token returns `false`.\\n  function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n    bytes4 selector_ = token.transfer.selector;\\n\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      let freeMemoryPointer := mload(0x40)\\n      mstore(freeMemoryPointer, selector_)\\n      mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff))\\n      mstore(add(freeMemoryPointer, 36), value)\\n\\n      if iszero(call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)) {\\n        returndatacopy(0, 0, returndatasize())\\n        revert(0, returndatasize())\\n      }\\n    }\\n\\n    require(getLastTransferResult(token), 'GPv2: failed transfer');\\n  }\\n\\n  /// @dev Wrapper around a call to the ERC20 function `transferFrom` that\\n  /// reverts also when the token returns `false`.\\n  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n    bytes4 selector_ = token.transferFrom.selector;\\n\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      let freeMemoryPointer := mload(0x40)\\n      mstore(freeMemoryPointer, selector_)\\n      mstore(add(freeMemoryPointer, 4), and(from, 0xffffffffffffffffffffffffffffffffffffffff))\\n      mstore(add(freeMemoryPointer, 36), and(to, 0xffffffffffffffffffffffffffffffffffffffff))\\n      mstore(add(freeMemoryPointer, 68), value)\\n\\n      if iszero(call(gas(), token, 0, freeMemoryPointer, 100, 0, 0)) {\\n        returndatacopy(0, 0, returndatasize())\\n        revert(0, returndatasize())\\n      }\\n    }\\n\\n    require(getLastTransferResult(token), 'GPv2: failed transferFrom');\\n  }\\n\\n  /// @dev Verifies that the last return was a successful `transfer*` call.\\n  /// This is done by checking that the return data is either empty, or\\n  /// is a valid ABI encoded boolean.\\n  function getLastTransferResult(IERC20 token) private view returns (bool success) {\\n    // NOTE: Inspecting previous return data requires assembly. Note that\\n    // we write the return data to memory 0 in the case where the return\\n    // data size is 32, this is OK since the first 64 bytes of memory are\\n    // reserved by Solidy as a scratch space that can be used within\\n    // assembly blocks.\\n    // <https://docs.soliditylang.org/en/v0.7.6/internals/layout_in_memory.html>\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      /// @dev Revert with an ABI encoded Solidity error with a message\\n      /// that fits into 32-bytes.\\n      ///\\n      /// An ABI encoded Solidity error has the following memory layout:\\n      ///\\n      /// ------------+----------------------------------\\n      ///  byte range | value\\n      /// ------------+----------------------------------\\n      ///  0x00..0x04 |        selector(\\\"Error(string)\\\")\\n      ///  0x04..0x24 |      string offset (always 0x20)\\n      ///  0x24..0x44 |                    string length\\n      ///  0x44..0x64 | string value, padded to 32-bytes\\n      function revertWithMessage(length, message) {\\n        mstore(0x00, '\\\\x08\\\\xc3\\\\x79\\\\xa0')\\n        mstore(0x04, 0x20)\\n        mstore(0x24, length)\\n        mstore(0x44, message)\\n        revert(0x00, 0x64)\\n      }\\n\\n      switch returndatasize()\\n      // Non-standard ERC20 transfer without return.\\n      case 0 {\\n        // NOTE: When the return data size is 0, verify that there\\n        // is code at the address. This is done in order to maintain\\n        // compatibility with Solidity calling conventions.\\n        // <https://docs.soliditylang.org/en/v0.7.6/control-structures.html#external-function-calls>\\n        if iszero(extcodesize(token)) {\\n          revertWithMessage(20, 'GPv2: not a contract')\\n        }\\n\\n        success := 1\\n      }\\n      // Standard ERC20 transfer returning boolean success value.\\n      case 32 {\\n        returndatacopy(0, 0, returndatasize())\\n\\n        // NOTE: For ABI encoding v1, any non-zero value is accepted\\n        // as `true` for a boolean. In order to stay compatible with\\n        // OpenZeppelin's `SafeERC20` library which is known to work\\n        // with the existing ERC20 implementation we care about,\\n        // make sure we return success for any non-zero return value\\n        // from the `transfer*` call.\\n        success := iszero(iszero(mload(0)))\\n      }\\n      default {\\n        revertWithMessage(31, 'GPv2: malformed transfer result')\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xb2f76a16e2913aa27678059f5763bf7d443fb94cbc617969f21fee601fc2761c\",\"license\":\"LGPL-3.0-or-later\"},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\"},\"@aave/periphery-v3/contracts/rewards/interfaces/IStakedToken.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\ninterface IStakedToken {\\n  function STAKED_TOKEN() external view returns (address);\\n\\n  function stake(address to, uint256 amount) external;\\n\\n  function redeem(address to, uint256 amount) external;\\n\\n  function cooldown() external;\\n\\n  function claimRewards(address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x10b37429742840bd41ae967e03ee35e295d500229c2d7b2922c9492cd2f8f1ee\",\"license\":\"AGPL-3.0\"},\"@aave/periphery-v3/contracts/rewards/interfaces/IStakedTokenTransferStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\nimport {IStakedToken} from '../interfaces/IStakedToken.sol';\\nimport {ITransferStrategyBase} from './ITransferStrategyBase.sol';\\n\\n/**\\n * @title IStakedTokenTransferStrategy\\n * @author Aave\\n **/\\ninterface IStakedTokenTransferStrategy is ITransferStrategyBase {\\n  /**\\n   * @dev Perform a MAX_UINT approval of AAVE to the Staked Aave contract.\\n   */\\n  function renewApproval() external;\\n\\n  /**\\n   * @dev Drop approval of AAVE to the Staked Aave contract in case of emergency.\\n   */\\n  function dropApproval() external;\\n\\n  /**\\n   * @return Staked Token contract address\\n   */\\n  function getStakeContract() external view returns (address);\\n\\n  /**\\n   * @return Underlying token address from the stake contract\\n   */\\n  function getUnderlyingToken() external view returns (address);\\n}\\n\",\"keccak256\":\"0x9ef8eba3547768d2d45582fdba95d279935345d2e8a5e098c0587b332d004a63\",\"license\":\"AGPL-3.0\"},\"@aave/periphery-v3/contracts/rewards/interfaces/ITransferStrategyBase.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\ninterface ITransferStrategyBase {\\n  event EmergencyWithdrawal(\\n    address indexed caller,\\n    address indexed token,\\n    address indexed to,\\n    uint256 amount\\n  );\\n\\n  /**\\n   * @dev Perform custom transfer logic via delegate call from source contract to a TransferStrategy implementation\\n   * @param to Account to transfer rewards\\n   * @param reward Address of the reward token\\n   * @param amount Amount to transfer to the \\\"to\\\" address parameter\\n   * @return Returns true bool if transfer logic succeeds\\n   */\\n  function performTransfer(\\n    address to,\\n    address reward,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @return Returns the address of the Incentives Controller\\n   */\\n  function getIncentivesController() external view returns (address);\\n\\n  /**\\n   * @return Returns the address of the Rewards admin\\n   */\\n  function getRewardsAdmin() external view returns (address);\\n\\n  /**\\n   * @dev Perform an emergency token withdrawal only callable by the Rewards admin\\n   * @param token Address of the token to withdraw funds from this contract\\n   * @param to Address of the recipient of the withdrawal\\n   * @param amount Amount of the withdrawal\\n   */\\n  function emergencyWithdrawal(\\n    address token,\\n    address to,\\n    uint256 amount\\n  ) external;\\n}\\n\",\"keccak256\":\"0x9b3726be4350d926d094bdfe0510b468190383c91da4b5531059c6fe31b92221\",\"license\":\"AGPL-3.0\"},\"@aave/periphery-v3/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\nimport {IStakedToken} from '../interfaces/IStakedToken.sol';\\nimport {IStakedTokenTransferStrategy} from '../interfaces/IStakedTokenTransferStrategy.sol';\\nimport {ITransferStrategyBase} from '../interfaces/ITransferStrategyBase.sol';\\nimport {TransferStrategyBase} from './TransferStrategyBase.sol';\\nimport {GPv2SafeERC20} from '@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol';\\nimport {IERC20} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol';\\n\\n/**\\n * @title StakedTokenTransferStrategy\\n * @notice Transfer strategy that stakes the rewards into a staking contract and transfers the staking contract token.\\n * The underlying token must be transferred to this contract to be able to stake it on demand.\\n * @author Aave\\n **/\\ncontract StakedTokenTransferStrategy is TransferStrategyBase, IStakedTokenTransferStrategy {\\n  using GPv2SafeERC20 for IERC20;\\n\\n  IStakedToken internal immutable STAKE_CONTRACT;\\n  address internal immutable UNDERLYING_TOKEN;\\n\\n  constructor(\\n    address incentivesController,\\n    address rewardsAdmin,\\n    IStakedToken stakeToken\\n  ) TransferStrategyBase(incentivesController, rewardsAdmin) {\\n    STAKE_CONTRACT = stakeToken;\\n    UNDERLYING_TOKEN = STAKE_CONTRACT.STAKED_TOKEN();\\n\\n    IERC20(UNDERLYING_TOKEN).approve(address(STAKE_CONTRACT), 0);\\n    IERC20(UNDERLYING_TOKEN).approve(address(STAKE_CONTRACT), type(uint256).max);\\n  }\\n\\n  /// @inheritdoc TransferStrategyBase\\n  function performTransfer(\\n    address to,\\n    address reward,\\n    uint256 amount\\n  )\\n    external\\n    override(TransferStrategyBase, ITransferStrategyBase)\\n    onlyIncentivesController\\n    returns (bool)\\n  {\\n    require(reward == address(STAKE_CONTRACT), 'REWARD_TOKEN_NOT_STAKE_CONTRACT');\\n\\n    STAKE_CONTRACT.stake(to, amount);\\n\\n    return true;\\n  }\\n\\n  /// @inheritdoc IStakedTokenTransferStrategy\\n  function renewApproval() external onlyRewardsAdmin {\\n    IERC20(UNDERLYING_TOKEN).approve(address(STAKE_CONTRACT), 0);\\n    IERC20(UNDERLYING_TOKEN).approve(address(STAKE_CONTRACT), type(uint256).max);\\n  }\\n\\n  /// @inheritdoc IStakedTokenTransferStrategy\\n  function dropApproval() external onlyRewardsAdmin {\\n    IERC20(UNDERLYING_TOKEN).approve(address(STAKE_CONTRACT), 0);\\n  }\\n\\n  /// @inheritdoc IStakedTokenTransferStrategy\\n  function getStakeContract() external view returns (address) {\\n    return address(STAKE_CONTRACT);\\n  }\\n\\n  /// @inheritdoc IStakedTokenTransferStrategy\\n  function getUnderlyingToken() external view returns (address) {\\n    return UNDERLYING_TOKEN;\\n  }\\n}\\n\",\"keccak256\":\"0x00b9574fa9355940cb869f7bb343231cf57989ea39f17927c9c2e4871d4880f0\",\"license\":\"AGPL-3.0\"},\"@aave/periphery-v3/contracts/rewards/transfer-strategies/TransferStrategyBase.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\nimport {ITransferStrategyBase} from '../interfaces/ITransferStrategyBase.sol';\\nimport {GPv2SafeERC20} from '@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol';\\nimport {IERC20} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol';\\n\\n/**\\n * @title TransferStrategyStorage\\n * @author Aave\\n **/\\nabstract contract TransferStrategyBase is ITransferStrategyBase {\\n  using GPv2SafeERC20 for IERC20;\\n\\n  address internal immutable INCENTIVES_CONTROLLER;\\n  address internal immutable REWARDS_ADMIN;\\n\\n  constructor(address incentivesController, address rewardsAdmin) {\\n    INCENTIVES_CONTROLLER = incentivesController;\\n    REWARDS_ADMIN = rewardsAdmin;\\n  }\\n\\n  /**\\n   * @dev Modifier for incentives controller only functions\\n   */\\n  modifier onlyIncentivesController() {\\n    require(INCENTIVES_CONTROLLER == msg.sender, 'CALLER_NOT_INCENTIVES_CONTROLLER');\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier for reward admin only functions\\n   */\\n  modifier onlyRewardsAdmin() {\\n    require(msg.sender == REWARDS_ADMIN, 'ONLY_REWARDS_ADMIN');\\n    _;\\n  }\\n\\n  /// @inheritdoc ITransferStrategyBase\\n  function getIncentivesController() external view override returns (address) {\\n    return INCENTIVES_CONTROLLER;\\n  }\\n\\n  /// @inheritdoc ITransferStrategyBase\\n  function getRewardsAdmin() external view override returns (address) {\\n    return REWARDS_ADMIN;\\n  }\\n\\n  /// @inheritdoc ITransferStrategyBase\\n  function performTransfer(\\n    address to,\\n    address reward,\\n    uint256 amount\\n  ) external virtual returns (bool);\\n\\n  /// @inheritdoc ITransferStrategyBase\\n  function emergencyWithdrawal(\\n    address token,\\n    address to,\\n    uint256 amount\\n  ) external onlyRewardsAdmin {\\n    IERC20(token).safeTransfer(to, amount);\\n\\n    emit EmergencyWithdrawal(msg.sender, token, to, amount);\\n  }\\n}\\n\",\"keccak256\":\"0xd412ed205d7d5c9d9f2172cc537ad0e86ec7aee7f9bc658a4001a3be4b85ba5e\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b5060405162000df838038062000df88339810160408190526200003591620001d1565b6001600160a01b0380841660805280831660a052811660c08190526040805163312f6b8360e01b8152905163312f6b83916004808201926020929091908290030181865afa1580156200008c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b2919062000225565b6001600160a01b0390811660e081905260c05160405163095ea7b360e01b815292166004830152600060248301529063095ea7b3906044016020604051808303816000875af11580156200010a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013091906200024c565b5060e05160c05160405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562000188573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ae91906200024c565b5050505062000270565b6001600160a01b0381168114620001ce57600080fd5b50565b600080600060608486031215620001e757600080fd5b8351620001f481620001b8565b60208501519093506200020781620001b8565b60408501519092506200021a81620001b8565b809150509250925092565b6000602082840312156200023857600080fd5b81516200024581620001b8565b9392505050565b6000602082840312156200025f57600080fd5b815180151581146200024557600080fd5b60805160a05160c05160e051610afb620002fd6000396000818161016f015281816104ab0152818161076a01526108630152600081816101490152818161023b0152818161033a0152818161047c0152818161073b0152610815015260008181610123015281816103b801528181610534015261067701526000818160c101526101970152610afb6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a34062511161005b578063a340625114610119578063c625544314610121578063dfd29d9e14610147578063ee719bc81461016d57600080fd5b806316beb9821461008d5780633a342acc146100b557806375d26413146100bf5780638d8e5da714610106575b600080fd5b6100a061009b366004610a60565b610193565b60405190151581526020015b60405180910390f35b6100bd6103a0565b005b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ac565b6100bd610114366004610a60565b61051c565b6100bd61065f565b7f00000000000000000000000000000000000000000000000000000000000000006100e1565b7f00000000000000000000000000000000000000000000000000000000000000006100e1565b7f00000000000000000000000000000000000000000000000000000000000000006100e1565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163314610239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43414c4c45525f4e4f545f494e43454e54495645535f434f4e54524f4c4c455260448201526064015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146102ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5245574152445f544f4b454e5f4e4f545f5354414b455f434f4e5452414354006044820152606401610230565b6040517fadc9772e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063adc9772e90604401600060405180830381600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b506001979650505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f524557415244535f41444d494e00000000000000000000000000006044820152606401610230565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044015b6020604051808303816000875af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610a9c565b50565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146105bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f524557415244535f41444d494e00000000000000000000000000006044820152606401610230565b6105dc73ffffffffffffffffffffffffffffffffffffffff84168383610892565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7dc4ea712e6400e67a5abca1a983e5c420c386c19936dc120cd860b50b8e25798460405161065291815260200190565b60405180910390a4505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146106fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f524557415244535f41444d494e00000000000000000000000000006044820152606401610230565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190610a9c565b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016104d6565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff84166004830152602482018390529060008060448382895af16108f5573d6000803e3d6000fd5b506108ff8461096b565b610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f475076323a206661696c6564207472616e7366657200000000000000000000006044820152606401610230565b50505050565b60006109ab565b7f08c379a00000000000000000000000000000000000000000000000000000000060005260206004528060245250806044525060646000fd5b3d80156109ea5760208114610a24576109e57f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f610972565b610a31565b823b610a1b57610a1b7f475076323a206e6f74206120636f6e74726163740000000000000000000000006014610972565b60019150610a31565b3d6000803e600051151591505b50919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a5b57600080fd5b919050565b600080600060608486031215610a7557600080fd5b610a7e84610a37565b9250610a8c60208501610a37565b9150604084013590509250925092565b600060208284031215610aae57600080fd5b81518015158114610abe57600080fd5b939250505056fea26469706673582212202061bf117bf5cee0ea37a2406939a716b7c9d14e93e3e21992c4b889d3cca04364736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063a34062511161005b578063a340625114610119578063c625544314610121578063dfd29d9e14610147578063ee719bc81461016d57600080fd5b806316beb9821461008d5780633a342acc146100b557806375d26413146100bf5780638d8e5da714610106575b600080fd5b6100a061009b366004610a60565b610193565b60405190151581526020015b60405180910390f35b6100bd6103a0565b005b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ac565b6100bd610114366004610a60565b61051c565b6100bd61065f565b7f00000000000000000000000000000000000000000000000000000000000000006100e1565b7f00000000000000000000000000000000000000000000000000000000000000006100e1565b7f00000000000000000000000000000000000000000000000000000000000000006100e1565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163314610239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43414c4c45525f4e4f545f494e43454e54495645535f434f4e54524f4c4c455260448201526064015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146102ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5245574152445f544f4b454e5f4e4f545f5354414b455f434f4e5452414354006044820152606401610230565b6040517fadc9772e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063adc9772e90604401600060405180830381600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b506001979650505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f524557415244535f41444d494e00000000000000000000000000006044820152606401610230565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044015b6020604051808303816000875af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610a9c565b50565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146105bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f524557415244535f41444d494e00000000000000000000000000006044820152606401610230565b6105dc73ffffffffffffffffffffffffffffffffffffffff84168383610892565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7dc4ea712e6400e67a5abca1a983e5c420c386c19936dc120cd860b50b8e25798460405161065291815260200190565b60405180910390a4505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146106fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4f4e4c595f524557415244535f41444d494e00000000000000000000000000006044820152606401610230565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190610a9c565b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016104d6565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff84166004830152602482018390529060008060448382895af16108f5573d6000803e3d6000fd5b506108ff8461096b565b610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f475076323a206661696c6564207472616e7366657200000000000000000000006044820152606401610230565b50505050565b60006109ab565b7f08c379a00000000000000000000000000000000000000000000000000000000060005260206004528060245250806044525060646000fd5b3d80156109ea5760208114610a24576109e57f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f610972565b610a31565b823b610a1b57610a1b7f475076323a206e6f74206120636f6e74726163740000000000000000000000006014610972565b60019150610a31565b3d6000803e600051151591505b50919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a5b57600080fd5b919050565b600080600060608486031215610a7557600080fd5b610a7e84610a37565b9250610a8c60208501610a37565b9150604084013590509250925092565b600060208284031215610aae57600080fd5b81518015158114610abe57600080fd5b939250505056fea26469706673582212202061bf117bf5cee0ea37a2406939a716b7c9d14e93e3e21992c4b889d3cca04364736f6c634300080a0033",
  "devdoc": {
    "author": "Aave*",
    "kind": "dev",
    "methods": {
      "dropApproval()": {
        "details": "Drop approval of AAVE to the Staked Aave contract in case of emergency."
      },
      "emergencyWithdrawal(address,address,uint256)": {
        "details": "Perform an emergency token withdrawal only callable by the Rewards admin",
        "params": {
          "amount": "Amount of the withdrawal",
          "to": "Address of the recipient of the withdrawal",
          "token": "Address of the token to withdraw funds from this contract"
        }
      },
      "getIncentivesController()": {
        "returns": {
          "_0": "Returns the address of the Incentives Controller"
        }
      },
      "getRewardsAdmin()": {
        "returns": {
          "_0": "Returns the address of the Rewards admin"
        }
      },
      "getStakeContract()": {
        "returns": {
          "_0": "Staked Token contract address"
        }
      },
      "getUnderlyingToken()": {
        "returns": {
          "_0": "Underlying token address from the stake contract"
        }
      },
      "performTransfer(address,address,uint256)": {
        "details": "Perform custom transfer logic via delegate call from source contract to a TransferStrategy implementation",
        "params": {
          "amount": "Amount to transfer to the \"to\" address parameter",
          "reward": "Address of the reward token",
          "to": "Account to transfer rewards"
        },
        "returns": {
          "_0": "Returns true bool if transfer logic succeeds"
        }
      },
      "renewApproval()": {
        "details": "Perform a MAX_UINT approval of AAVE to the Staked Aave contract."
      }
    },
    "title": "StakedTokenTransferStrategy",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Transfer strategy that stakes the rewards into a staking contract and transfers the staking contract token. The underlying token must be transferred to this contract to be able to stake it on demand.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}